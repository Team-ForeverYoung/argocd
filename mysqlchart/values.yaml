replicaCount: 1

persistence: 
  existingClaim: mysql-efs-claim # mysql-pvc.yaml에서 생성한 PVC를 참조
  storageClass: efs-storage # efs를쓸거야
  size: "10Gi"

namespace: dev-mysql

forever:
  efs:
    id: fs-0d33fd7789ea080f7
  mysql:
    mountPath: /var/lib/mysql
    volumeName: mysql-data
    secret: mysql-dev-secret
image:
  repository: mysql
  pullPolicy: IfNotPresent
  tag: "8.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: false
  automount: true
  annotations: {}
  name: mysql

podAnnotations: {}
podLabels: {}

podSecurityContext: {}

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 3306

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80


volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false


volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
